[INPUT]
    Name                tail
    Tag                 application.*
    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*
    Path                /var/log/containers/*.log
    Docker_Mode         On
    Docker_Mode_Flush   5
    Docker_Mode_Parser  container_firstline
    Parser              docker
    DB                  /var/fluent-bit/state/flb_container.db
    Mem_Buf_Limit       50MB
    Skip_Long_Lines     On
    Refresh_Interval    10
    Rotate_Wait         30
    storage.type        filesystem
    Read_from_Head      $${READ_FROM_HEAD}

[INPUT]
    Name                tail
    Tag                 application.*
    Path                /var/log/containers/fluent-bit*
    Parser              docker
    DB                  /var/fluent-bit/state/flb_log.db
    Mem_Buf_Limit       5MB
    Skip_Long_Lines     On
    Refresh_Interval    10
    Read_from_Head      $${READ_FROM_HEAD}

[INPUT]
    Name                tail
    Tag                 application.*
    Path                /var/log/containers/cloudwatch-agent*
    Docker_Mode         On
    Docker_Mode_Flush   5
    Docker_Mode_Parser  cwagent_firstline
    Parser              docker
    DB                  /var/fluent-bit/state/flb_cwagent.db
    Mem_Buf_Limit       5MB
    Skip_Long_Lines     On
    Refresh_Interval    10
    Read_from_Head      $${READ_FROM_HEAD}

[FILTER]
    Name                kubernetes
    Match               application.*
    Kube_URL            https://kubernetes.default.svc:443
    Kube_Tag_Prefix     application.var.log.containers.
    Merge_Log           On
    Merge_Log_Key       log_processed
    K8S-Logging.Parser  On
    K8S-Logging.Exclude Off
    Labels              Off
    Annotations         Off
    Use_Kubelet         On
    Kubelet_Port        10250
    Buffer_Size         0

%{~ if USE_CLOUDWATCH_LOGS == "true" }
[OUTPUT]
    Name                cloudwatch_logs
    Match               application.*
    region              $${AWS_REGION}
    log_group_name      /aws/eks/containerinsights/$${CLUSTER_NAME}/application
    log_stream_prefix   $${HOST_NAME}-
    auto_create_group   false
    extra_user_agent    container-insights
%{ endif ~}
%{~ if USE_S3_LOGS == "true" }
[OUTPUT]
    Name                s3
    Match               application.*
    bucket              ${BUCKET_NAME}
    region              $${AWS_REGION}
    s3_key_format       /fluent-bit-logs/$TAG/%Y/%m/%d/%H/%M/%S/host
    s3_key_format_tag_delimiters .-
    total_file_size     1M
    upload_timeout      10m
    use_put_object      Off
    tls                 On
    tls.verify          Off
%{ endif ~}