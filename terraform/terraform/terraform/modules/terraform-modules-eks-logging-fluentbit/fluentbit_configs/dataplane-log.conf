[INPUT]
    Name                systemd
    Tag                 dataplane.systemd.*
    Systemd_Filter      _SYSTEMD_UNIT=docker.service
    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service
    DB                  /var/fluent-bit/state/systemd.db
    Path                /var/log/journal
    Read_From_Tail      $${READ_FROM_TAIL}

[INPUT]
    Name                tail
    Tag                 dataplane.tail.*
    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*
    Docker_Mode         On
    Docker_Mode_Flush   5
    Docker_Mode_Parser  container_firstline
    Parser              docker
    DB                  /var/fluent-bit/state/flb_dataplane_tail.db
    Mem_Buf_Limit       50MB
    Skip_Long_Lines     On
    Refresh_Interval    10
    Rotate_Wait         30
    storage.type        filesystem
    Read_from_Head      $${READ_FROM_HEAD}

[FILTER]
    Name                modify
    Match               dataplane.systemd.*
    Rename              _HOSTNAME                   hostname
    Rename              _SYSTEMD_UNIT               systemd_unit
    Rename              MESSAGE                     message
    Remove_regex        ^((?!hostname|systemd_unit|message).)*$

[FILTER]
    Name                aws
    Match               dataplane.*
    imds_version        v2

%{~ if USE_CLOUDWATCH_LOGS == "true" }
[OUTPUT]
    Name                cloudwatch_logs
    Match               dataplane.*
    region              $${AWS_REGION}
    log_group_name      /aws/eks/containerinsights/$${CLUSTER_NAME}/dataplane
    log_stream_prefix   $${HOST_NAME}-
    auto_create_group   false
    extra_user_agent    container-insights
%{ endif ~}
%{~ if USE_S3_LOGS == "true" }
[OUTPUT]
    Name                s3
    Match               dataplane.*
    bucket              ${BUCKET_NAME}
    region              $${AWS_REGION}
    s3_key_format       /fluent-bit-logs/$TAG/%Y/%m/%d/%H/%M/%S/host
    s3_key_format_tag_delimiters .-
    total_file_size     1M
    upload_timeout      10m
    use_put_object      Off
    tls                 On
    tls.verify          Off
%{ endif ~}